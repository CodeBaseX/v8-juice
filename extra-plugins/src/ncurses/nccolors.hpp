#ifndef WANDERINGHORSE_NET_V8_NC_NCCOLORS_HPP_INCLUDED
#define WANDERINGHORSE_NET_V8_NC_NCCOLORS_HPP_INCLUDED 1
#include <ncurses.h>
#include <string>

// auto-generated code: do not edit this file, but edit ./createCursesColors.sh instead.
// Expected to be included by client code using ape::nc, if
// they need these functions.
/***

The functions in this file are related to curses attributes. We
attempt to provide a friendlier interface for client apps which want
to manipulate attributes, particularly by name.

***/
namespace {} // make sure doxygen does not assign the above docs to the main ns.


namespace v8 {
namespace juice {
namespace nc {
/*****
    Sets up a full 64-color palette for use with COLOR_PAIR(number).

    For each BG/FG combination of the following colors:

    COLOR_BLACK
    COLOR_RED
    COLOR_GREEN
    COLOR_YELLOW
    COLOR_BLUE
    COLOR_MAGENTA
    COLOR_CYAN
    COLOR_WHITE

    in that order, A palette entry is made. The entries
    are grouped by background, not foreground. That is,
    colors 1..7 have a bg of COLOR_BLACK, 8..15 have
    a bg of COLOR_RED, etc...

    The full list of colors is here:

<pre>

Background BLACK:
1 = BLACK on BLACK
2 = RED on BLACK
3 = GREEN on BLACK
4 = YELLOW on BLACK
5 = BLUE on BLACK
6 = MAGENTA on BLACK
7 = CYAN on BLACK
8 = WHITE on BLACK

Background RED:
9 = BLACK on RED
10 = RED on RED
11 = GREEN on RED
12 = YELLOW on RED
13 = BLUE on RED
14 = MAGENTA on RED
15 = CYAN on RED
16 = WHITE on RED

Background GREEN:
17 = BLACK on GREEN
18 = RED on GREEN
19 = GREEN on GREEN
20 = YELLOW on GREEN
21 = BLUE on GREEN
22 = MAGENTA on GREEN
23 = CYAN on GREEN
24 = WHITE on GREEN

Background YELLOW:
25 = BLACK on YELLOW
26 = RED on YELLOW
27 = GREEN on YELLOW
28 = YELLOW on YELLOW
29 = BLUE on YELLOW
30 = MAGENTA on YELLOW
31 = CYAN on YELLOW
32 = WHITE on YELLOW

Background BLUE:
33 = BLACK on BLUE
34 = RED on BLUE
35 = GREEN on BLUE
36 = YELLOW on BLUE
37 = BLUE on BLUE
38 = MAGENTA on BLUE
39 = CYAN on BLUE
40 = WHITE on BLUE

Background MAGENTA:
41 = BLACK on MAGENTA
42 = RED on MAGENTA
43 = GREEN on MAGENTA
44 = YELLOW on MAGENTA
45 = BLUE on MAGENTA
46 = MAGENTA on MAGENTA
47 = CYAN on MAGENTA
48 = WHITE on MAGENTA

Background CYAN:
49 = BLACK on CYAN
50 = RED on CYAN
51 = GREEN on CYAN
52 = YELLOW on CYAN
53 = BLUE on CYAN
54 = MAGENTA on CYAN
55 = CYAN on CYAN
56 = WHITE on CYAN

Background WHITE:
57 = BLACK on WHITE
58 = RED on WHITE
59 = GREEN on WHITE
60 = YELLOW on WHITE
61 = BLUE on WHITE
62 = MAGENTA on WHITE
63 = CYAN on WHITE
64 = WHITE on WHITE
</pre>

*****/

void install_full_palette();

/****

color_pairnum_for_names() accepts to string-form color names, forground
and background color, and tries to find a matching COLOR_PAIR number.
It returns 0 if it does not find a match. The color names are
case-insensitive, and must be one of:


BLACK
RED
GREEN
YELLOW
BLUE
MAGENTA
CYAN
WHITE


You can get the curses attribute values from the return value by passing
it to the curses COLOR_PAIR(pairnumber) macro.

****/
short color_pairnum_for_names( const std::string & fore, const std::string & back );

/**
ulong color_pair() returns the same as COLOR_PAIR(color_pairnum_for_names(fore,back)),
or returns 0 if no such pair is found.
*/
unsigned long color_pair( const std::string & fore, const std::string & back );

}}} // namespaces

#endif // WANDERINGHORSE_NET_V8_NC_NCCOLORS_HPP_INCLUDED

